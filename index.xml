<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gzy的博客</title>
    <link>https://gzygzy00.github.io//</link>
    <description>Recent content on gzy的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Sat, 14 Dec 2019 14:38:01 +0800</lastBuildDate>
    
	<atom:link href="https://gzygzy00.github.io//index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>浅析 URL</title>
      <link>https://gzygzy00.github.io//posts/%E6%B5%85%E6%9E%90-url/</link>
      <pubDate>Sat, 14 Dec 2019 14:38:01 +0800</pubDate>
      
      <guid>https://gzygzy00.github.io//posts/%E6%B5%85%E6%9E%90-url/</guid>
      <description>URL  统一资源定位符（英语：Uniform Resource Locator，缩写：URL；或称统一资源定位器、定位地址、URL 地址，俗称网页地址或简称网址）是因特网上标准的资源的地址（Address），如同在网络上的门牌。 详细-维基百科
  URL 由协议+域名或 IP+端口号+路径+查询字符串+锚点组成    https，是协议； zh.wikipedia.org，是服务器； 80，是服务器上的网络端口号； /w/index.php，是路径； ?title=Special:随机页面，是询问。    #（+内容），为锚点  一般访问一个网站，比如输入 baidu.com 浏览器会向电信/联通提供的 DNS 服务器询问对应的 IP，回答 IP 后，浏览器向对应 IP 的 80（提供 http 服务）/443（提供 https 服务）端口发送请求。
1. DNS  域名系统（英语：Domain Name System，缩写：DNS）是互联网的一项服务。它作为将域名和 IP 地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS 使用 TCP 和 UDP 端口 53。当前，对于每一级域名长度的限制是 63 个字符，域名总长度则不能超过 253 个字符。 详细-维基百科
 简单的说，DNS 就是将域名（如 www.baidu.com ）转化为机器可读的 IP 地址（如 192.0.11.1）
 nslookup 命令用于查询 DNS 的记录，查看域名解析是否正常，在网络故障的时候用来诊断网络问题。  2.</description>
    </item>
    
    <item>
      <title>CSS 小结</title>
      <link>https://gzygzy00.github.io//posts/css-%E5%B0%8F%E7%BB%93/</link>
      <pubDate>Sat, 07 Dec 2019 20:27:14 +0800</pubDate>
      
      <guid>https://gzygzy00.github.io//posts/css-%E5%B0%8F%E7%BB%93/</guid>
      <description>有一段时间没写博客了，项目高峰期已过，该学习一波了
小结一下 CSS
 1. 浏览器渲染原理  根据 HTML 构建 DOM 根据 CSS 构建 CSSOM 将两棵树合成一棵渲染树 rendertree Layout 布局（文档流、盒模型、计算大小和位置） Paint 绘制（边框颜色、文字颜色、阴影等） Compose 合成（根据层叠关系展示画面）  三种更新方式：
例如用 transform: translateX 替代 left，性能上不会产生 repaint，要更好。
2. 盒模型 (box-sizing) (1) content-box width = content （兼容低版本 ie 可以用 content-box 避免出现 scroll 时宽度变化）
(2) border-box width = content + padding + border （通常使用的）
3. 一个 div 的分层 从上往下（屏幕外向里）依次是：
 内联子元素（文字内容） 浮动元素 块级子元素 border background  4.</description>
    </item>
    
    <item>
      <title>HTML常用标签</title>
      <link>https://gzygzy00.github.io//posts/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Fri, 30 Aug 2019 01:47:25 +0800</pubDate>
      
      <guid>https://gzygzy00.github.io//posts/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      <description>a 标签的用法 1. href 包含超链接指向的 URL 或 URL 片段。
2. target &amp;lt;a href=&amp;quot;https://www.baidu.com&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;first&amp;lt;/a&amp;gt;  此时可在新窗口打开百度
其他的还有_top, _parent, _self
3. download 理论上在标签里加上download可以下载，但是很多浏览器不支持
4. rel=noopener 暂空
img 标签的用法 &amp;lt;img src=&amp;quot;&amp;quot; alt=&amp;quot;&amp;quot; /&amp;gt;   作用  发出 get 请求，展示一张图片
 属性  src 为图片地址， alt 为图片加载失败时，显示的文字
 事件  onload/onerror
 响应式
max-width: 100%;   table 标签的用法 table { width: 300px; table-layout: auto; border-spacing: 20px; border-collapse: collapse; } table th, td { border: 1px solid saddlebrown; }  &amp;lt;table&amp;gt; &amp;lt;thead&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;!</description>
    </item>
    
    <item>
      <title>HTML入门笔记1</title>
      <link>https://gzygzy00.github.io//posts/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Thu, 22 Aug 2019 23:51:24 +0800</pubDate>
      
      <guid>https://gzygzy00.github.io//posts/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</guid>
      <description>有幸看了 2 天 TI，大巴黎咚咚咚！
 概述 HTML 的全名是“超文本标记语言”（HyperText Markup Language），上个世纪 90 年代由欧洲核子研究中心的物理学家蒂姆·伯纳斯-李（Tim Berners-Lee）发明。
起手 平常写 HTML 通过 EMMET 语法，!+tab 即可
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt; &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;ie=edge&amp;quot;&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  标签 浏览器渲染网页的时候，会把 HTML 源码解析成一个标签树，每个标签都是一个节点（node），称为网页元素（element）。所以，“标签”和“元素”基本上是同义词，只是使用的场合不一样：标签是源码角度来看，元素是从编程角度来看，比如&amp;lt;p&amp;gt;标签对应网页的 p 元素。
章节标签  h1~h6 标题 section 章节 article 文章 p 段落 header 头部 footer 脚部 main 主要内容 aside 旁支内容 div 划分  内容标签  ol+li 有序列表 ul+li 无序列表 dl+dt+dd 术语+描述 pre 保留 html 中的空格 hr 分隔线 br 换行 a 超链接 em 着重元素 strong 加粗 code 呈现代码 quote 引用 blockquote 块级引用  全局属性 属性（attribute）是标签的额外信息，使用空格与标签名和其他属性分隔。</description>
    </item>
    
    <item>
      <title>记录用hugo搭建个人博客</title>
      <link>https://gzygzy00.github.io//posts/%E8%AE%B0%E5%BD%95%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Mon, 19 Aug 2019 21:08:29 +0800</pubDate>
      
      <guid>https://gzygzy00.github.io//posts/%E8%AE%B0%E5%BD%95%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>开始新的工作已经一个多月了，最近学习了用 hugo 在 GitHub 上搭建个人博客，记录一下。
  进入hugo releases下载hugo 下载后将exe文件解压缩，并记录path： 右键我的电脑 -&amp;gt; 属性 -&amp;gt; 高级系统设置 -&amp;gt; 环境变量 -&amp;gt; 在 Path 里添加（上下都行） 此时可以通过命令行查看版本信息  进入hugo官网，点击Quick Start（看得懂可以直接参照官网进行设置，无视后面内容） 新建一个文件，在命令行输入: hugo new site 你的github账号.github.io-creator cd 刚刚创建的目录 git init git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke echo &#39;theme = &amp;quot;ananke&amp;quot;&#39; &amp;gt;&amp;gt; config.toml hugo new posts/my-first-post.md 这时可以用 VSCode 打开 -creator 目录下的 posts/my-first-post.md 里面的 title 即为这篇博客名，draft 草稿，false 状态即可展示 hugo server -D启动服务器，可以点击链接查看博客页面，ctrl+c 退出 修改 language，最下面的 theme 为当前主题 最后，我们要把博客放到 public 目录下给别人看，自己在 creator 里写就好； 命令行直接输入hugo，会发现多了一个 public 目录，直接cd public 创建一个 .</description>
    </item>
    
  </channel>
</rss>